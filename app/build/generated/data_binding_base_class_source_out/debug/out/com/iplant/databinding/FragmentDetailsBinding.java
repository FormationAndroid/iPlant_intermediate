// Generated by data binding compiler. Do not edit!
package com.iplant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.iplant.R;
import com.iplant.models.plant.PlantDetails;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentDetailsBinding extends ViewDataBinding {
  @NonNull
  public final Button button20;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final Guideline guideline4;

  @NonNull
  public final Guideline guideline5;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @Bindable
  protected PlantDetails mPlant;

  protected FragmentDetailsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button button20, Guideline guideline3, Guideline guideline4, Guideline guideline5,
      ImageView imageView, ImageView imageView3, TextView textView4, TextView textView5) {
    super(_bindingComponent, _root, _localFieldCount);
    this.button20 = button20;
    this.guideline3 = guideline3;
    this.guideline4 = guideline4;
    this.guideline5 = guideline5;
    this.imageView = imageView;
    this.imageView3 = imageView3;
    this.textView4 = textView4;
    this.textView5 = textView5;
  }

  public abstract void setPlant(@Nullable PlantDetails plant);

  @Nullable
  public PlantDetails getPlant() {
    return mPlant;
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_details, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentDetailsBinding>inflateInternal(inflater, R.layout.fragment_details, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_details, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentDetailsBinding>inflateInternal(inflater, R.layout.fragment_details, null, false, component);
  }

  public static FragmentDetailsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentDetailsBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentDetailsBinding)bind(component, view, R.layout.fragment_details);
  }
}
